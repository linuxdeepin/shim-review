#!/bin/bash 

# Redirect output to log file
rm build.log
exec > >(tee -i build.log)
exec 2>&1

CERT=UOS-UEFI-RSA.der
SBAT=sbat.uos.csv
OUTNAMEX64=shimx64
SHIM_DBX=shim.dbx
BOOTX64EFI=BOOTX64.EFI
# aarch64
OUTNAMEAA64=shimaa64
BOOTAA64EFI=BOOTAA64.EFI

rm -rf shim
rm *.EF
rm *.efi
rm *.cab
rm *.cksum



# Get shim from a tar file
RELEASEPATH="https://github.com/rhboot/shim/releases/download/15.6/shim-15.6.tar.bz2"


curl -L $RELEASEPATH | tar -xj || exit 1
#tar -xjf shim.tar.bz2
mv shim-15.6 shim

cp $CERT shim/
cp $SBAT shim/data/
cp $SHIM_DBX shim/

cd shim
export VENDOR_CERT_FILE=$CERT
#export VENDOR_DBX_FILE=$SHIM_DBX
#export DEFAULT_LOADER="\\\\\\\\grubx64.efi"
function build()
{   
    ARCH=$1
    make clean
    make ARCH=$ARCH


}

case `uname -m` in
	x86_64|amd64|AMD64)
		echo "build x86_64 shim"
		build x86_64
		cp shimx64.efi ../$OUTNAMEX64.efi
		cd ..
		sha256sum -b $OUTNAMEX64.efi > $OUTNAMEX64.cksum
		cp $OUTNAMEX64.efi $BOOTX64EFI
		lcab $BOOTX64EFI $OUTNAMEX64.cab
		;;
	aarch64)
		echo "build aarch64 shim"
		build aarch64
		cp shimaa64.efi ../$OUTNAMEAA64.efi
		cd ..
		sha256sum -b $OUTNAMEAA64.efi > $OUTNAMEAA64.cksum
		cp $OUTNAMEAA64.efi $BOOTAA64EFI
		lcab $BOOTAA64EFI $OUTNAMEAA64.cab
		;;
	*)
		echo "This CPU architecture is not currently supported"
		exit 1
esac



